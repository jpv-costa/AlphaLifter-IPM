import Animated from "react-native-reanimated";
import { TransformsStyle } from "react-native";
declare type AnimatedTransform = {
    [P in keyof TransformsStyle["transform"]]: Animated.Adaptable<TransformsStyle["transform"][P]>;
};
export declare const moving: (position: Animated.Node<number>, minPositionDelta?: number, emptyFrameThreshold?: number) => Animated.Node<number>;
export declare const snapPoint: (value: Animated.Adaptable<number>, velocity: Animated.Adaptable<number>, points: Animated.Adaptable<number>[]) => Animated.Adaptable<number>;
export declare const bInterpolate: (value: Animated.Adaptable<number>, origin: Animated.Adaptable<number>, destination: Animated.Adaptable<number>) => Animated.Node<number>;
export declare const translateZ: (perspective: Animated.Adaptable<number>, z: Animated.Adaptable<number>) => {
    scale: Animated.Node<number>;
};
export declare const transformOrigin: (x?: Animated.Adaptable<number>, y?: Animated.Adaptable<number>, ...transformations: AnimatedTransform[]) => AnimatedTransform[];
export declare const useTransition: <T extends unknown>(state: T, src: Animated.Adaptable<number>, dest: Animated.Adaptable<number>, duration?: number, easing?: Animated.EasingFunction) => Animated.Value<number>;
export declare const useToggle: (toggle: boolean, duration?: number, easing?: Animated.EasingFunction) => Animated.Value<number>;
export {};
